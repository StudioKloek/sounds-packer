"use strict";function _interopDefault(e){return e&&"object"==typeof e&&"default"in e?e.default:e}Object.defineProperty(exports,"__esModule",{value:!0});var ora=_interopDefault(require("ora")),fs=_interopDefault(require("fs-extra")),get=_interopDefault(require("get-value")),defaults=_interopDefault(require("object.defaults")),path=require("path"),path__default=_interopDefault(path),logSymbols=_interopDefault(require("log-symbols")),chalk=_interopDefault(require("chalk")),set=_interopDefault(require("set-value")),pupa=_interopDefault(require("pupa")),uppercamelcase=_interopDefault(require("uppercamelcase")),camelcase=_interopDefault(require("camelcase")),getAudioDuration=require("get-audio-duration"),globby=_interopDefault(require("globby")),hasha=_interopDefault(require("hasha")),sane=require("sane"),throttleDebounce=require("throttle-debounce");async function readSettingsFrom(e){const t=ora(`Reading settings from ${e}...`).start();let a={};try{const t=await fs.readJSON(e);a=get(t,"sounds",{}),(a=defaults(a,{sourceDirectory:"./assets/",scriptDirectory:"./assets/converted/",targetDirectory:"./assets/converted/",watch:!1,watchDelay:500,prefixes:[],formats:["ogg","mp3"],directories:[]})).prefixes.sort((e,t)=>{return e<t?1:e>t?-1:0})}catch(o){return console.log(o),t.fail(`Could not load settings from ${e}... (does it exist?)`),a}const o=a.directories.length;return o?t.succeed(`Found ${o} directories to process...`):t.fail("Found no directories to process..."),a}function makeVariableSafe(e){return e.match(/^\d/)&&(e=`s${e}`),e.replace(/(\W)/g,"_").replace(/_{2,}/g,".").replace(/^_/,"").replace(/_$/,"")}const loaderInfoTemplate="export default {\n  assetName : '{assetName}',\n  assets : {assets},\n  numberOfSounds : {numberOfSounds},\n  type: 'sounds'\n};",assetTemplate="export const {assetName} = {assetData};";function convertPathToVariableName(e,t){let a=(e=`${e}`).replace(`${t}/`,"").split("/").map(makeVariableSafe),o=a.pop();o=o.toUpperCase(),a=a.map(camelcase);let r=t.split("/");return(r=r.slice(r.length-(1===r.length?1:2))).push("sounds"),r=uppercamelcase(r.join("-")),a.length>0?[r,e=(e=a.join(".")).replace(/(\W^\.)/g,"").replace(/\.{2,}/g,".").replace(/^\./,"").replace(/\.$/,""),o].join("."):[r,o].join(".")}function parseAssetData(e,t){const a=t,o={};for(const t of e||[]){const e={id:t.hash,duration:t.duration,name:t.name};set(o,convertPathToVariableName(path__default.join(t.path,t.name),a),e)}return o}function getSortedItems(e){const t=[];for(const a of Object.keys(e))e.hasOwnProperty(a)&&t.push([a,e[a]]);t.sort((e,t)=>{const a=e[0],o=t[0];return a<o?-1:a>o?1:0});const a={};for(const e of t)a[e[0]]=e[1];return a}function generateContents(e,t){let a="";const o=[];for(const t of Object.keys(e)){const r=getSortedItems(e[t]);let n=JSON.stringify(r,null,2);n=n.replace(/"([^(")"]+)":/g,"$1:"),a=`${a}${pupa(assetTemplate,{assetName:t,assetData:n})}\n`,o.push(t)}return a=`${a}${pupa(loaderInfoTemplate,{assets:o,assetName:t.fileName,numberOfSounds:t.numberOfSounds})}\n`}function getScriptPath(e,t){const a=e.split("/"),o=a.pop();return a.length<2&&a.push(o),e=a.join("/"),`${path__default.join(t,e)}/assets/sounds-${o}.ts`}async function generateCode(e,t,a,o){const r=get(o,"scriptDirectory",a.scriptDirectory),n=generateContents(parseAssetData(t,e),{fileName:e,numberOfSounds:t.length}),s=getScriptPath(e,r);await fs.outputFile(s,n)}const isPacking={},shouldPackAgain={};async function packAll(e,t){console.log(logSymbols.info,chalk.blue("Start packing all items...")),console.log(logSymbols.info,chalk.blue(`Clearing sounds directory (${t.targetDirectory})...`)),await fs.emptyDir(t.targetDirectory);for(const a of e)await pack(a,t);console.log(logSymbols.success,chalk.green("Done packing all items..."))}async function pack(e,t){let a,o;if(Array.isArray(e)?(a=e[0],o=e[1]):a=e,isPacking[a])return console.log(logSymbols.warning,chalk.yellow("Allready packing, starting again afterwards...")),void(shouldPackAgain[a]=!0);isPacking[a]=!0;const r=ora(`Packing ${a}`).start();try{if(!packFolder(a,t,o))return void r.fail(`Error packing ${a}`)}catch(e){return r.fail(`Error packing ${a}`),void console.error(logSymbols.warning,e.message)}isPacking[a]=!1,shouldPackAgain[a]?(shouldPackAgain[a]=!1,r.warn("Needs repacking, something changed while packing..."),await pack(e,t)):r.succeed(`Done packing ${a}`)}async function packFolder(e,t,a){const o=path__default.join(t.sourceDirectory,e),r=await globby(`${o}/**/*.wav`),n=[];for(const e of r){let a=await hasha.fromFile(e,{algorithm:"md5"});a=a.substring(0,10);let r=await getAudioDuration.getAudioDurationInSeconds(e);r=Math.round(1e4*r)/1e4;const s=e.replace(`${o}/`,""),i={filename:path.basename(s,".wav"),path:s.replace(`${path.basename(s)}`,""),duration:r,hash:a};let c=i.filename;t.prefixes.forEach(e=>{c.startsWith(e)&&(c=c.slice(e.length))}),i.name=c,n.push(i)}return!!await copyFiles(e,n,t)&&(await generateCode(e,n,t,a),!0)}async function copyFiles(e,t,a){const o=path__default.join(a.sourceDirectory,e);for(const e of t)try{for(const t of a.formats)await fs.copy(`${path__default.join(o,e.path,e.filename)}.${t}`,`${path__default.join(a.targetDirectory,e.hash)}.${t}`)}catch(e){return console.log(e),!1}return!0}async function watch(e,t){for(const a of e)await watchDirectory(a,t)}async function watchDirectory(e,t){return new Promise(a=>{let o,r={};if(Array.isArray(e)?(o=e[0],r=e[1]):o=e,!0!==t.watch&&!0!==r.watch||!1===r.watch)return void a();const n=throttleDebounce.debounce(t.watchDelay,()=>{pack(e,t)}),s=sane.sane(`${path__default.join(t.sourceDirectory,o)}`,{glob:["**/*.png","**/*.jpg"]});s.on("ready",()=>{console.log(logSymbols.info,chalk.blue(`Started watching ${o} with a delay of ${t.watchDelay/1e3}s`)),a()}),s.on("change",n),s.on("add",n),s.on("delete",n)})}const AssetFile="assets.json";async function main(e){const t=await readSettingsFrom(e),a=t.directories;delete t.directories,t&&a&&(await packAll(a,t),await watch(a,t))}function pack$1(e){main(e||AssetFile)}exports.pack=pack$1;
