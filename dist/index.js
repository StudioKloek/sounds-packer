"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("ora"),t=require("fs-extra"),a=require("get-value"),r=require("object.defaults"),n=require("path"),o=require("log-symbols"),s=require("chalk"),i=require("set-value"),c=require("pupa"),u=require("uppercamelcase"),l=require("camelcase"),f=require("get-audio-duration"),d=require("globby"),p=require("hasha"),g=require("sane"),h=require("throttle-debounce");function y(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var m=y(e),w=y(t),$=y(a),b=y(r),D=y(n),j=y(o),q=y(s),k=y(i),v=y(c),O=y(u),N=y(l),S=y(d),x=y(p);function A(e){return e.match(/^\d/)&&(e=`s${e}`),e.replace(/(\W)/g,"_").replace(/_{2,}/g,".").replace(/^_/,"").replace(/_$/,"")}function _(e,t){let a=(e=`${e}`).replace(`${t}/`,"").split("/").map(A),r=a.pop();r=r.toUpperCase(),a=a.map(N.default);let n=t.split("/");return n=n.slice(n.length-(1===n.length?1:2)),n.push("sounds"),n=O.default(n.join("-")),a.length>0?[n,e=(e=a.join(".")).replace(/(\W^\.)/g,"").replace(/\.{2,}/g,".").replace(/^\./,"").replace(/\.$/,""),r].join("."):[n,r].join(".")}function F(e){const t=[];for(const a of Object.keys(e))e.hasOwnProperty(a)&&t.push([a,e[a]]);t.sort(((e,t)=>{const a=e[0],r=t[0];return a<r?-1:a>r?1:0}));const a={};for(const e of t)a[e[0]]=e[1];return a}async function P(e,t,a,r){const n=$.default(r,"scriptDirectory",a.scriptDirectory),o=function(e,t){let a="";const r=[];for(const t of Object.keys(e)){const n=F(e[t]);let o=JSON.stringify(n,null,2);o=o.replace(/"([^(")"]+)":/g,"$1:"),a=`${a}${v.default("export const {assetName} = {assetData};",{assetName:t,assetData:o})}\n`,r.push(t)}return a=`${a}${v.default("export default {\n  assetName : '{assetName}',\n  assets : {assets},\n  numberOfSounds : {numberOfSounds},\n  type: 'sounds'\n};",{assets:r,assetName:t.fileName,numberOfSounds:t.numberOfSounds})}\n`,a}(function(e,t){const a=t,r={};for(const t of e||[]){const e={id:t.hash,duration:t.duration,name:t.name};k.default(r,_(D.default.join(t.path,t.name),a),e)}return r}(t,e),{fileName:e,numberOfSounds:t.length}),s=function(e,t){const a=e.split("/"),r=a.pop();return a.length<2&&a.push(r),e=a.join("/"),`${D.default.join(t,e)}/assets/sounds-${r}.ts`}(e,n);await w.default.outputFile(s,o)}const C={},E={};async function W(e,t){let a,r;if(Array.isArray(e)?(a=e[0],r=e[1]):a=e,C[a])return console.log(j.default.warning,q.default.yellow("Allready packing, starting again afterwards...")),void(E[a]=!0);C[a]=!0;const o=m.default(`Packing ${a}`).start();try{if(!async function(e,t,a){const r=D.default.join(t.sourceDirectory,e),o=await S.default(`${r}/**/*.wav`),s=[];for(const e of o){let a=await x.default.fromFile(e,{algorithm:"md5"});a=a.substring(0,10);let o=await f.getAudioDurationInSeconds(e);o=Math.round(1e4*o)/1e4;const i=e.replace(`${r}/`,""),c={filename:n.basename(i,".wav"),path:i.replace(`${n.basename(i)}`,""),duration:o,hash:a};let u=c.filename;t.prefixes.forEach((e=>{u.startsWith(e)&&(u=u.slice(e.length))})),c.name=u,s.push(c)}if(!await async function(e,t,a){const r=D.default.join(a.sourceDirectory,e);for(const e of t)try{for(const t of a.formats)await w.default.copy(`${D.default.join(r,e.path,e.filename)}.${t}`,`${D.default.join(a.targetDirectory,e.hash)}.${t}`)}catch(e){return console.log(e),!1}return!0}(e,s,t))return!1;return await P(e,s,t,a),!0}(a,t,r))return void o.fail(`Error packing ${a}`)}catch(e){return o.fail(`Error packing ${a}`),void console.error(j.default.warning,e.message)}C[a]=!1,E[a]?(E[a]=!1,o.warn("Needs repacking, something changed while packing..."),await W(e,t)):o.succeed(`Done packing ${a}`)}async function J(e,t){return new Promise((a=>{let r,n={};if(Array.isArray(e)?(r=e[0],n=e[1]):r=e,!0!==t.watch&&!0!==n.watch||!1===n.watch)return void a();const o=h.debounce(t.watchDelay,(()=>{W(e,t)})),s=g.sane(`${D.default.join(t.sourceDirectory,r)}`,{glob:["**/*.png","**/*.jpg"]});s.on("ready",(()=>{console.log(j.default.info,q.default.blue(`Started watching ${r} with a delay of ${t.watchDelay/1e3}s`)),a()})),s.on("change",o),s.on("add",o),s.on("delete",o)}))}async function M(e){const t=await async function(e){const t=m.default(`Reading settings from ${e}...`).start();let a={};try{const t=await w.default.readJSON(e);a=$.default(t,"sounds",{}),a=b.default(a,{sourceDirectory:"./assets/",scriptDirectory:"./assets/converted/",targetDirectory:"./assets/converted/",watch:!1,watchDelay:500,prefixes:[],formats:["ogg","mp3"],directories:[]}),a.prefixes.sort(((e,t)=>e<t?1:e>t?-1:0))}catch(r){return console.log(r),t.fail(`Could not load settings from ${e}... (does it exist?)`),a}const r=a.directories.length;return r?t.succeed(`Found ${r} directories to process...`):t.fail("Found no directories to process..."),a}(e),a=t.directories;delete t.directories,t&&a&&(await async function(e,t){console.log(j.default.info,q.default.blue("Start packing all items...")),console.log(j.default.info,q.default.blue(`Clearing sounds directory (${t.targetDirectory})...`)),await w.default.emptyDir(t.targetDirectory);for(const a of e)await W(a,t);console.log(j.default.success,q.default.green("Done packing all items..."))}(a,t),await async function(e,t){for(const a of e)await J(a,t)}(a,t))}exports.pack=function(e){M(e||"assets.json")};
